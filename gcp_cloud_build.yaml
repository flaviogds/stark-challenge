steps:
  # Build and deploy cloud run
  - name: gcr.io/cloud-builders/docker
    id: Build Cloud Run
    args:
      - build
      - "--no-cache"
      - "-t"
      - "$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA"
      - .
      - "-f"
      - Dockerfile
  - name: gcr.io/cloud-builders/docker
    id: Push Image
    args:
      - push
      - "$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA"
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    id: Deploy Cloud Run Image
    args:
      - -c
      - |
        gcloud run deploy $_SERVICE_NAME \
          --image='$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA' \
          --set-secrets='ORGANIZATION_ID=ORGANIZATION_ID:latest' \
          --set-secrets='PROJECT_ID=PROJECT_ID:latest' \
          --set-secrets='TRANSFER_ACCOUNT=TRANSFER_ACCOUNT:latest' \
          --set-secrets='SSL_KEY=SSL_KEY:latest' \
          --set-secrets='GOOGLE_CREDENTIALS=GOOGLE_CREDENTIALS:latest' \
          --set-secrets='MODE=MODE:latest' \
          --service-account='$_SERVICE_NAME@$PROJECT_ID.iam.gserviceaccount.com' \
          --no-allow-unauthenticated \
          --region=$_DEPLOY_REGION  \
          --platform=$_PLATFORM \
          --min-instances=0 \
          --max-instances=2 \
          --concurrency=1000 \
          --memory=512Mi \
          --cpu=2 \
          --port=$_PORT
    entrypoint: bash
  # Create and Deploy API Gateway
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    id: Create API Gateway Config
    args:
      - "-c"
      - |
        apt-get update
        apt-get install -qq -y gettext

        export APP_ADDRESS=$(gcloud run services describe $_SERVICE_NAME    --region $_DEPLOY_REGION --format 'value(status.url)')
        export API_HOSTNAME=$(gcloud api-gateway apis describe $_SERVICE_NAME --format 'value(managedService)')

        envsubst '$API_HOSTNAME' < openapi-serveless.yaml > openapi-serveless-step1.yaml
        envsubst '$APP_ADDRESS' < openapi-serveless-step1.yaml > openapi-serveless-step2.yaml
        cp openapi-serveless-step2.yaml /workspace/openapi-serveless.yaml

        gcloud api-gateway api-configs create $_SERVICE_NAME-$COMMIT_SHA  \
          --api=$_SERVICE_NAME  \
          --backend-auth-service-account='$_SERVICE_NAME@$PROJECT_ID.iam.gserviceaccount.com' \
          --openapi-spec=/workspace/openapi-serveless.yaml
    entrypoint: bash
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    id: Deploy API Gateway
    args:
      - api-gateway
      - gateways
      - update
      - "$_SERVICE_NAME"
      - "--api=$_SERVICE_NAME"
      - "--api-config=$_SERVICE_NAME-$COMMIT_SHA"
      - "--location=$_DEPLOY_REGION"
    entrypoint: gcloud

images:
  - "$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA"
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _GCR_HOSTNAME: us.gcr.io
  _SERVICE_NAME: stark-challange
  _DEPLOY_REGION: us-central1
  _PLATFORM: managed
  _PORT: "80"
  _TRIGGER_ID: 149fb547-66de-458e-9914-8ffcd9b166b7
  _LABELS: gcb-trigger-id=149fb547-66de-458e-9914-8ffcd9b166b7
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - stark-challange-api
# enf_of_file
